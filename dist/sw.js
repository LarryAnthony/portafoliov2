importScripts("https://cdn.jsdelivr.net/npm/pouchdb@7.2.1/dist/pouchdb.min.js");const API_KEY="https://new.larry-jacobo.com/api/email",STATIC_CACHE="static-v3",DYNAMIC_CACHE="dynamic-v1",INMUTABLE_CACHE="inmutable-v1";function actualizarCacheDinamico(e,t,n){return n.ok?caches.open(e).then((e=>(e.put(t,n.clone()),n.clone()))):n}function actualizarCacheEstatico(e,t,n){if(!n.includes(t.url))return fetch(t).then((n=>actualizarCacheDinamico(e,t,n)))}const db=new PouchDB("mensaje");function guardarMensaje(e){return e._id=(new Date).toISOString(),db.put(e).then((()=>{self.registration.sync.register("nuevo-post");return new Response(JSON.stringify({ok:!0,offline:!0}))}))}function manejoApiMensajes(e,t){return"POST"===t.clone().method?self.registration.sync?t.clone().text().then((e=>{guardarMensaje(JSON.parse(e))})):fetch(t):fetch(t).then((n=>n.ok?(actualizarCacheDinamico(e,t,n.clone()),n.clone()):caches.match(t))).catch((e=>caches.match(t)))}const APP_SHELL=["/","index.html","assets/images/fondo1.jpg","assets/images/anthonyopt.jpg","assets/images/anthonyfavicon.png"],APP_SHELL_INMUTABLE=["https://cdn.jsdelivr.net/npm/pouchdb@7.2.1/dist/pouchdb.min.js"];function postearMensajes(){const e=[];return db.allDocs({include_docs:!0}).then((t=>(t.rows.forEach((t=>{const n=t.doc,a=fetch(API_KEY,{headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",body:JSON.stringify(n)}).then((e=>db.remove(n)));e.push(a)})),Promise.all(e))))}self.addEventListener("install",(e=>{const t=caches.open("static-v3").then((e=>{e.addAll(APP_SHELL)}));e.waitUntil(Promise(t))})),self.addEventListener("activate",(e=>{const t=caches.keys().then((e=>{e.forEach((e=>{if("static-v3"!==e&&e.includes("static"))return caches.delete(e)}))}));e.waitUntil(t)})),self.addEventListener("fetch",(e=>{let t;e.request.url;if(e.request.url.includes("/api"))return manejoApiMensajes("dynamic-v1",e.request);t=caches.match(e.request).then((t=>t?(actualizarCacheEstatico("static-v3",e.request,APP_SHELL_INMUTABLE),t):fetch(e.request).then((t=>actualizarCacheDinamico("dynamic-v1",e.request,t))))),e.respondWith(t)})),self.addEventListener("sync",(e=>{if("nuevo-post"===e.tag){const t=postearMensajes();e.waitUntil(t)}}));